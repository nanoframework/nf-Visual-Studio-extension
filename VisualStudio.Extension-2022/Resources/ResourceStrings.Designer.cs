//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace nanoFramework.Tools.VisualStudio.Extension.Resources {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ResourceStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceStrings() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("nanoFramework.Tools.VisualStudio.Extension.Resources.ResourceStrings", typeof(ResourceStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Attempting to attach to the nanoDevice for debugging... 的本地化字符串。
        /// </summary>
        internal static string Attach {
            get {
                return ResourceManager.GetString("Attach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Attach failed. 的本地化字符串。
        /// </summary>
        internal static string AttachFailed {
            get {
                return ResourceManager.GetString("AttachFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Attach failed because  an internal error caused the process to terminate. 的本地化字符串。
        /// </summary>
        internal static string AttachFailedProcessDied {
            get {
                return ResourceManager.GetString("AttachFailedProcessDied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Attaching to nanoDevice... 的本地化字符串。
        /// </summary>
        internal static string AttachingToDevice {
            get {
                return ResourceManager.GetString("AttachingToDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 CorDebugProcess not properly initialized (m_pid == 0) 的本地化字符串。
        /// </summary>
        internal static string BogusCorDebugProcess {
            get {
                return ResourceManager.GetString("BogusCorDebugProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Could not reconnect to the debugging target after rebooting it. 的本地化字符串。
        /// </summary>
        internal static string CouldNotReconnect {
            get {
                return ResourceManager.GetString("CouldNotReconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Debugger engine could not attach to the nanoDevice target. 的本地化字符串。
        /// </summary>
        internal static string DebugEngineAttachmentFailure {
            get {
                return ResourceManager.GetString("DebugEngineAttachmentFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The debugger engine thread has terminated unexpectedly with error &apos;{0}&apos;. 的本地化字符串。
        /// </summary>
        internal static string DebuggerThreadTerminated {
            get {
                return ResourceManager.GetString("DebuggerThreadTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 nanoDevice debugging starting... 的本地化字符串。
        /// </summary>
        internal static string DebuggingStarting {
            get {
                return ResourceManager.GetString("DebuggingStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The nanoDevice target could not be found. 的本地化字符串。
        /// </summary>
        internal static string DebuggingTargetNotFound {
            get {
                return ResourceManager.GetString("DebuggingTargetNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Deployment error: the debugging failed to initialize because of device errors. 的本地化字符串。
        /// </summary>
        internal static string DeploymentErrorDeviceErrors {
            get {
                return ResourceManager.GetString("DeploymentErrorDeviceErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Deployment error: failed to (re)connect debugger engine to nanoDevice target. 的本地化字符串。
        /// </summary>
        internal static string DeploymentErrorReconnect {
            get {
                return ResourceManager.GetString("DeploymentErrorReconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Device &quot;{0}&quot; identified 的本地化字符串。
        /// </summary>
        internal static string DeviceFound {
            get {
                return ResourceManager.GetString("DeviceFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 ERROR: Timeout waiting for nanoDevice to leave initialization state. Try reset the device and reconnect in Device Explorer tool window. 的本地化字符串。
        /// </summary>
        internal static string DeviceInitializationTimeout {
            get {
                return ResourceManager.GetString("DeviceInitializationTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 nanoDevice is initialized 的本地化字符串。
        /// </summary>
        internal static string DeviceInitialized {
            get {
                return ResourceManager.GetString("DeviceInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Device &quot;{0}&quot; was not found 的本地化字符串。
        /// </summary>
        internal static string DeviceNotFound {
            get {
                return ResourceManager.GetString("DeviceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The debugger engine is listening to debug events from the nanoDevice target 的本地化字符串。
        /// </summary>
        internal static string DispatchEvents {
            get {
                return ResourceManager.GetString("DispatchEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The debugger engine failed to receive any debug events from the nanoDevice target 的本地化字符串。
        /// </summary>
        internal static string DispatchEventsFailed {
            get {
                return ResourceManager.GetString("DispatchEventsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Failed to erase deployment area of target device. 的本地化字符串。
        /// </summary>
        internal static string EraseTargetDeploymentFailed {
            get {
                return ResourceManager.GetString("EraseTargetDeploymentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The nanoDevice target and the debugger engine failed to initialize because of unspecified device errors. 的本地化字符串。
        /// </summary>
        internal static string InitializationFailed {
            get {
                return ResourceManager.GetString("InitializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization of the debugging process failed. 的本地化字符串。
        /// </summary>
        internal static string InitializeProcessFailed {
            get {
                return ResourceManager.GetString("InitializeProcessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization of the debugging process failed because an internal error caused the process to terminate. 的本地化字符串。
        /// </summary>
        internal static string InitializeProcessFailedProcessDied {
            get {
                return ResourceManager.GetString("InitializeProcessFailedProcessDied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The nanoDevice runtime is loading the application assemblies and starting execution. 的本地化字符串。
        /// </summary>
        internal static string LoadAssemblies {
            get {
                return ResourceManager.GetString("LoadAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Updating information about assemblies on the debugging target. 的本地化字符串。
        /// </summary>
        internal static string LoadedAssembliesInformation {
            get {
                return ResourceManager.GetString("LoadedAssembliesInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The debugging target is not in an initialized state; rebooting... 的本地化字符串。
        /// </summary>
        internal static string Rebooting {
            get {
                return ResourceManager.GetString("Rebooting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Updating thread list 的本地化字符串。
        /// </summary>
        internal static string RunningThreadsInformation {
            get {
                return ResourceManager.GetString("RunningThreadsInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Waiting for the nanoDevice target {0} to connect to the debugger engine... 的本地化字符串。
        /// </summary>
        internal static string StartDeviceSearch {
            get {
                return ResourceManager.GetString("StartDeviceSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The nanoDevice target initialized successfully. 的本地化字符串。
        /// </summary>
        internal static string TargetInitializeSuccess {
            get {
                return ResourceManager.GetString("TargetInitializeSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Waiting for nanoDevice to initialize... 的本地化字符串。
        /// </summary>
        internal static string WaitingDeviceInitialization {
            get {
                return ResourceManager.GetString("WaitingDeviceInitialization", resourceCulture);
            }
        }
    }
}
